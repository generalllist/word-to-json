import os
import json
from docx import Document

print("‚úÖ –ì–æ—Ç–æ–≤–æ: python-docx –¥–æ—Å—Ç—É–ø–µ–Ω")

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ .docx-—Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
current_dir = os.getcwd()
docx_files = [f for f in os.listdir(current_dir) if f.endswith('.docx')]

if not docx_files:
    print("‚ö†Ô∏è –í –ø–∞–ø–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ .docx-—Ñ–∞–π–ª–∞.")
    exit()

print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ {len(docx_files)} .docx-—Ñ–∞–π–ª–æ–≤: {docx_files}")

# –ñ—ë—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ ‚Äî –∫–∞–∫ –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ
EXPECTED_HEADERS = [
    "event",
    "status",
    "psychophysiological_state",
    "circumstances",
    "pattern_of_behavior"
]

for filename in docx_files:
    print(f"\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞: {filename}")
    try:
        doc = Document(filename)
        all_data = []

        for table in doc.tables:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–µ–∑ —Å—Ç—Ä–æ–∫
            if len(table.rows) < 1:
                continue

            # –ú—ã –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∏!
            # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî –∂—ë—Å—Ç–∫–æ –∑–∞–¥–∞—ë–º –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ (–ø–æ –≤–∞—à–µ–º—É —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)
            # –ù—É–º–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)

            for row_idx, row in enumerate(table.rows[1:], start=2):  # start=2 ‚Üí –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö = —Å—Ç—Ä–æ–∫–∞ 2
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                if all(cell.text.strip() == "" for cell in row.cells):
                    continue

                record = {}
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–æ–≤–Ω–æ 5 –∫–æ–ª–æ–Ω–æ–∫ ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—å—à–µ —è—á–µ–µ–∫
                for i, header in enumerate(EXPECTED_HEADERS):
                    if i < len(row.cells):
                        value = row.cells[i].text.strip()
                    else:
                        value = ""  # –µ—Å–ª–∏ —è—á–µ–µ–∫ –º–µ–Ω—å—à–µ 5 ‚Äî —Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
                    record[header] = value

                record["_source_file"] = filename
                record["_row_number"] = row_idx
                all_data.append(record)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è JSON-—Ñ–∞–π–ª–∞
        base_name = os.path.splitext(filename)[0]
        safe_name = "".join(c if c.isalnum() or c in "._-" else "_" for c in base_name)
        json_filename = f"{safe_name}.json"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        with open(json_filename, 'w', encoding='utf-8') as f:
            json.dump(all_data, f, indent=2, ensure_ascii=False)

        print(f"  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {json_filename} ({len(all_data)} –∑–∞–ø–∏—Å–µ–π)")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}")

print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(docx_files)} —Ñ–∞–π–ª–æ–≤.")
